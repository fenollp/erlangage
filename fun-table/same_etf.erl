%% Copyright © 2014 Pierre Fenoll ‹pierrefenoll@gmail.com›
%% See LICENSE for licensing information.
%% -*- coding: utf-8 -*-
-module(same_etf).

%% same_etf: REPL ≠ compiled!!

-export([ s/0 ]).


%% API

s () ->
    %% Expected is from REPL
    Expected = <<131,112,0,0,2,81,1,153,130,242,188,160,26,53,42,69,147,42,109,185,90,19,54,0,0,0,6,0,0,0,4,100,0,8,101,114,108,95,101,118,97,108,97,6,98,4,204,23,149,103,100,0,6,98,64,98,108,100,114,0,0,0,43,0,0,0,0,2,106,104,2,100,0,5,118,97,108,117,101,112,0,0,0,82,2,196,253,215,225,209,128,71,181,240,134,182,254,135,48,200,150,0,0,0,5,0,0,0,1,100,0,5,115,104,101,108,108,97,5,98,6,39,238,191,103,100,0,6,98,64,98,108,100,114,0,0,0,43,0,0,0,0,2,103,100,0,6,98,64,98,108,100,114,0,0,0,42,0,0,0,0,2,104,2,100,0,4,101,118,97,108,112,0,0,1,105,3,196,253,215,225,209,128,71,181,240,134,182,254,135,48,200,150,0,0,0,21,0,0,0,4,100,0,5,115,104,101,108,108,97,21,98,6,39,238,191,103,100,0,6,98,64,98,108,100,114,0,0,0,43,0,0,0,0,2,104,2,100,0,5,118,97,108,117,101,112,0,0,0,82,2,196,253,215,225,209,128,71,181,240,134,182,254,135,48,200,150,0,0,0,5,0,0,0,1,100,0,5,115,104,101,108,108,97,5,98,6,39,238,191,103,100,0,6,98,64,98,108,100,114,0,0,0,43,0,0,0,0,2,103,100,0,6,98,64,98,108,100,114,0,0,0,42,0,0,0,0,2,98,0,0,64,20,112,0,0,0,180,1,196,253,215,225,209,128,71,181,240,134,182,254,135,48,200,150,0,0,0,12,0,0,0,3,100,0,5,115,104,101,108,108,97,12,98,6,39,238,191,103,100,0,6,98,64,98,108,100,114,0,0,0,43,0,0,0,0,2,104,2,100,0,5,118,97,108,117,101,112,0,0,0,82,2,196,253,215,225,209,128,71,181,240,134,182,254,135,48,200,150,0,0,0,5,0,0,0,1,100,0,5,115,104,101,108,108,97,5,98,6,39,238,191,103,100,0,6,98,64,98,108,100,114,0,0,0,43,0,0,0,0,2,103,100,0,6,98,64,98,108,100,114,0,0,0,42,0,0,0,0,2,98,0,0,64,20,103,100,0,6,98,64,98,108,100,114,0,0,0,42,0,0,0,0,2,103,100,0,6,98,64,98,108,100,114,0,0,0,42,0,0,0,0,2,108,0,0,0,1,104,5,100,0,6,99,108,97,117,115,101,97,1,108,0,0,0,1,104,3,100,0,3,118,97,114,97,1,100,0,1,95,106,106,108,0,0,0,1,104,3,100,0,4,97,116,111,109,97,1,100,0,2,111,107,106,106>>,
    Got = term_to_binary(fun (_) -> ok end),
    io:format("REPL:\t~w\nCompiled:\t~w\n", [Expected,Got]),
    Got = Expected.

%% Internals

%% End of Module.
